// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechPadoca.Dados;

namespace TechPadoca.Dados.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210731102823_BancoFinal")]
    partial class BancoFinal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TechPadoca.Dominio.Cozinha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadeProduzida")
                        .HasColumnType("decimal(20,5)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.ToTable("Cozinha");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("TechPadoca.Dominio.IngredienteEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("QuantidadeMinima")
                        .HasColumnType("decimal(20,5)");

                    b.Property<decimal>("QuantidadeTotal")
                        .HasColumnType("decimal(20,5)");

                    b.HasKey("Id");

                    b.HasIndex("IdIngrediente")
                        .IsUnique();

                    b.ToTable("IngredienteEstoque");
                });

            modelBuilder.Entity("TechPadoca.Dominio.ItemVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdVenda")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdVenda");

                    b.ToTable("ItemVendas");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Loja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("Loja");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("QtdIngrediente")
                        .HasColumnType("decimal(20,5)");

                    b.HasKey("Id");

                    b.HasIndex("IdIngrediente");

                    b.HasIndex("IdProduto");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataDaVenda")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Cozinha", b =>
                {
                    b.HasOne("TechPadoca.Dominio.Produto", "Produto")
                        .WithMany("Cozinha")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Estoque", b =>
                {
                    b.HasOne("TechPadoca.Dominio.Produto", "Produto")
                        .WithOne("Estoque")
                        .HasForeignKey("TechPadoca.Dominio.Estoque", "IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("TechPadoca.Dominio.IngredienteEstoque", b =>
                {
                    b.HasOne("TechPadoca.Dominio.Ingrediente", "Ingrediente")
                        .WithOne("IngredienteEstoque")
                        .HasForeignKey("TechPadoca.Dominio.IngredienteEstoque", "IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");
                });

            modelBuilder.Entity("TechPadoca.Dominio.ItemVenda", b =>
                {
                    b.HasOne("TechPadoca.Dominio.Produto", "Produto")
                        .WithMany("ItemVenda")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechPadoca.Dominio.Venda", "Venda")
                        .WithMany("ItemVendas")
                        .HasForeignKey("IdVenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Loja", b =>
                {
                    b.HasOne("TechPadoca.Dominio.Produto", "Produto")
                        .WithOne("Loja")
                        .HasForeignKey("TechPadoca.Dominio.Loja", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Receita", b =>
                {
                    b.HasOne("TechPadoca.Dominio.Ingrediente", "Ingrediente")
                        .WithMany("Receita")
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechPadoca.Dominio.Produto", "Produto")
                        .WithMany("Receita")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Ingrediente", b =>
                {
                    b.Navigation("IngredienteEstoque");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Produto", b =>
                {
                    b.Navigation("Cozinha");

                    b.Navigation("Estoque");

                    b.Navigation("ItemVenda");

                    b.Navigation("Loja");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("TechPadoca.Dominio.Venda", b =>
                {
                    b.Navigation("ItemVendas");
                });
#pragma warning restore 612, 618
        }
    }
}
